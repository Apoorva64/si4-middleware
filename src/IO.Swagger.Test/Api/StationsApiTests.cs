/*
 * JcDecaux
 *
 * JcDecaux API
 *
 * OpenAPI spec version: 1.0.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using JCDECAUX.rest.client.Api;
using NUnit.Framework;

namespace IO.Swagger.Test.Api
{
    /// <summary>
    ///  Class for testing StationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StationsApiTests
    {
        private StationsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StationsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StationsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' StationsApi
            //Assert.IsInstanceOfType(typeof(StationsApi), instance, "instance is a StationsApi");
        }

        /// <summary>
        /// Test GetStation
        /// </summary>
        [Test]
        public void GetStationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? stationNumber = null;
            //string contractName = null;
            //var response = instance.GetStation(stationNumber, contractName);
            //Assert.IsInstanceOf<Station> (response, "response is Station");
        }
        /// <summary>
        /// Test GetStations
        /// </summary>
        [Test]
        public void GetStationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetStations();
            //Assert.IsInstanceOf<List<Station>> (response, "response is List<Station>");
        }
    }

}
